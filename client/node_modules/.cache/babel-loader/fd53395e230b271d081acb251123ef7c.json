{"ast":null,"code":"import _slicedToArray from \"/Users/brettfitzpatrick/Desktop/Projects/Fant-Foot/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/brettfitzpatrick/Desktop/Projects/Fant-Foot/client/src/pages/Books.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  var _this = this;\n\n  // Initialize books as an empty array\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      articleTitle = _useState2[0],\n      setArticleTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      articleIntro = _useState4[0],\n      setArticleIntro = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      descriptionsPoints = _useState6[0],\n      setDescriptionsPoints = _useState6[1];\n\n  useEffect(function () {\n    loadBooks();\n  }, []);\n\n  function loadBooks() {\n    var articleArray = [];\n    API.getArticles().then(function (res) {\n      console.log(res.data.articles);\n      setArticleTitle(res.data.articles[0].headline);\n      setArticleIntro(res.data.articles[0].intro);\n\n      for (var i = 0; i < res.data.articles[0].descriptions.length; i++) {\n        articleArray.push(res.data.articles[0].descriptions[i]);\n        articleArray.push(res.data.articles[0].points[i]);\n      }\n\n      setDescriptionsPoints(articleArray);\n    }).catch(function (err) {\n      return console.log(err);\n    }); // Add code here to get all books from the database and store them using setBooks\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, articleTitle)), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"title\",\n    placeholder: \"Title (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"author\",\n    placeholder: \"Author (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    name: \"synopsis\",\n    placeholder: \"Synopsis (Optional)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Submit Book\"))), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Books On My List\")), function () {\n    for (var i = 0; i < descriptionsPoints.length; i++) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, descriptionsPoints[i]), /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, descriptionsPoints[i + 1]));\n    }\n  })));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/brettfitzpatrick/Desktop/Projects/Fant-Foot/client/src/pages/Books.js"],"names":["React","useState","useEffect","Jumbotron","DeleteBtn","API","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Books","articleTitle","setArticleTitle","articleIntro","setArticleIntro","descriptionsPoints","setDescriptionsPoints","loadBooks","articleArray","getArticles","then","res","console","log","data","articles","headline","intro","i","descriptions","length","push","points","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  // Initialize books as an empty array\n    const [articleTitle, setArticleTitle] = useState(\"\");\n    const [articleIntro, setArticleIntro] = useState(\"\");\n    const [descriptionsPoints, setDescriptionsPoints] = useState([]);\n\n\n    useEffect(() => {\n      loadBooks();\n    }, []);\n\n    function loadBooks() {\n      let articleArray = [];\n      API.getArticles()\n      .then(res => {\n        console.log(res.data.articles)\n        setArticleTitle(res.data.articles[0].headline)\n        setArticleIntro(res.data.articles[0].intro);\n        for (let i = 0; i < res.data.articles[0].descriptions.length; i++) {\n          articleArray.push(res.data.articles[0].descriptions[i]);\n          articleArray.push(res.data.articles[0].points[i]);\n        }\n        setDescriptionsPoints(articleArray);\n      })\n      .catch(err => console.log(err));\n      // Add code here to get all books from the database and store them using setBooks\n    }\n\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>{articleTitle}</h1>\n            </Jumbotron>\n            <form>\n              <Input name=\"title\" placeholder=\"Title (required)\" />\n              <Input name=\"author\" placeholder=\"Author (required)\" />\n              <TextArea name=\"synopsis\" placeholder=\"Synopsis (Optional)\" />\n              <FormBtn>Submit Book</FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Books On My List</h1>\n            </Jumbotron>\n            {() => {\n              for (let i = 0; i < descriptionsPoints.length; i++) {\n                return (\n                  <div>\n                    <h3>{descriptionsPoints[i]}</h3>\n                    <p>{descriptionsPoints[i + 1]}</p>\n                  </div>\n                )\n              }\n              }\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}